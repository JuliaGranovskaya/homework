# 1 Вычислить число π c заданной точностью d
# def pi(n):
#     # return ((1 / (16 ** n)) * ((4 / (8 * n + 1)) - (2 / (8 * n + 4)) - (1 / (8 * n + 5)) - (1 / (8 * n + 6))))
#  return 2 * (3*(1 - (1/3)*(1/3) + (1/5)*(1/3)**2 - (1/7)*(1/3)**3 + 1/((2 * n + 1)*(-3)**n))**0.5)
# print(pi(0.001))
# *Пример:* 

# - при $d = 0.001, π = 3.141.$    $10^{-1} ≤ d ≤10^{-10}$
# https://completerepair.ru/kak-vychislit-chislo-pi

# 2 Задайте натуральное число N. Напишите программу, которая составит список простых множителей числа N.
# def factor(N):
#     a = []
#     k = 2
#     while N > 1:
#         if N % k == 0:
#             a.append(k)
#             N = N / k
#         else:
#             k += 1
#     return a
# print(factor(36))

# print(factor(20))
# 3 Задайте последовательность чисел. Напишите программу, которая выведет список неповторяющихся элементов исходной последовательности.
# def repeat(a):
#     i = 0
#     k = 1
#     s = []
#     while i < len(a):
#         while k < len(a):
#             if a[i] == a[k]:
#                 s.append(a[i])
#             k += 1
#         i += 1
#         k = i + 1
#     return s
# print(repeat([1, 2, 2, 3, 4, 4, 6]))
# 4 Задана натуральная степень k. Сформировать случайным образом список коэффициентов (значения от 0 до 100) многочлена и записать в файл многочлен степени k.
# from random import randrange
# k = 2
# a = randrange(0, 101)
# b = randrange(0, 101)
# c = randrange(0, 101)
# res = f'{a} * x**{k} + {b} * x + {c} = 0'
# print(res)
# data = open('my_file.txt', 'w')
# data.writelines(res)
# data.close()

# *Пример:* 

# - k=2 => 2*x² + 4*x + 5 = 0 или x² + 5 = 0 или 10*x² = 0
# 5 Даны два файла, в каждом из которых находится запись многочлена. Задача - сформировать файл, содержащий сумму многочленов.